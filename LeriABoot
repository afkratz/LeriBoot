r1 = 63 //Comments in LeriA can be written directly into the code as long as they are after the instruction in a line. The assembler ignores anything that isn't a valid instruction
JTA = r1 //these first three lines set a register equal to 63, then set the jump-target to that register, then jump to the jump-target
jump true //this maintains most of the first 64 bytes of ram as empty and easilly accessible by pointers. Leri can only assign 6 bits(0-63) to a register in one command, so these addresses are the fastest to get to arbitrarily.


























































r1 = b100000 
flash r1 //one bit sent
r1 = b000000 
flash r1 //bit two
flash r1 //bit three 
flash r1 //bit four 
flash r1 //five
flash r1 //six
r1 = b001111 seven and eight are ones
flash r1 //seven
flash r1 //eight
r1 = b000000 going to send address 0
flash r1 
flash r1
flash r1
flash r1
flash r1
flash r1
flash r1
flash r1
flash r1
flash r1
flash r1
flash r1
flash r1
flash r1
flash r1
flash r1
flash r1
flash r1
flash r1
flash r1
flash r1
flash r1
flash r1
flash r1 // wow we just send 0000 to the chips 24 times! now the chips will start sending us bits from flash memory one each at a time untill we flash them 010000 to turn them off




